[vertex(number key = 1000000000, vertex parent)]
[edge(number weight = 0)]

/*-------------------------------------------------------------------------*/

InitializeAndPrint()

set<vertex> remaining = GetVertices()
while (!IsEmpty(remaining)) {
    vertex current = ExtractMin(remaining)
    foreach (vertex v in GetAdjacent(current)) {
        number edgeWeight = GetEdge(current, v).weight
        if (Contains(remaining, v) && edgeWeight < v.key) {
            v.parent = current
            v.key = edgeWeight
        }
    }
    HighlightAndPrint(current)
}

/*-------------------------------------------------------------------------*/

func none InitializeAndPrint() {
    vertex {
        (v1, label="v1"),
        (v2, label="v2"),
        (v3, label="v3"),
        (v4, label="v4"),
        (v5, label="v5"),
        (v6, label="v6")
    }

    v1 -- { (v2, weight=1), (v5, weight=5) }
    v2 -- { (v3, weight=5), (v5, weight=4), (v6, weight=2) }
    v3 -- { (v4, weight=2), (v6, weight=4) }
    v4 -- { (v6, weight=1) }
    v5 -- { (v6, weight=3) }

    foreach (edge e in GetEdges()) {
        e.label = AsText(e.weight)
    }

    v1.key = 0
    Print()
}

func vertex ExtractMin(set<vertex> remaining) {
    vertex smallest = none

    foreach (vertex v in remaining) {
        if (smallest == none) {
            smallest = v
        }
        elseif (v.key < smallest.key) {
            smallest = v
        }
    }

    Remove(remaining, smallest)
    return smallest
}

func none HighlightAndPrint(vertex v) {
    v.style = "bold"
    if (v.parent != none) {
        GetEdge(v.parent, v).style = "bold"
    }
    Print()
}
